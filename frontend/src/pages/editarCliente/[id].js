import axios from 'axios'
import Head from 'next/head'
import Link from 'next/link'
import { useRouter } from 'next/router'
import { useEffect, useState } from 'react'
import { IMaskInput } from 'react-imask'

export default function Editar() {
    const [data, setData] = useState([])
    const [mensagem, setMessage] = useState('')
    const router = useRouter()
    const [id] = useState(router.query.id)
    const getCliente = async () => {
        if (id === undefined) {
            setMessage('Erro: Cliente NÃO encontrado!')
            return
        }

        await axios.get('http://localhost:8080/cliente/' + id)
            .then((response) => {
                console.log(response.data.cliente)
                setData(response.data.cliente)
            }).catch((err) => {
                if (err.response) {
                    setMessage(err.response.data.mensagem)
                } else {
                    setMessage('Erro: Tente novamente mais tarde!')
                }
            })
    }

    useEffect(() => {
        getCliente()
    }, [id])

    const valueInput = (e) => setData({ ...data, [e.target.name]: e.target.value })

    const buscaCEP = async (cepInput) => {
        console.log(cepInput)
        console.log(data.cep)
        await axios.get('https://viacep.com.br/ws/'+cepInput+'/json')
        .then((response) => { 
            console.log('Busca CEP')
            console.log(response.data)
            console.log(data.telefone)

            setData({
            nome: data.nome,
            cpfcnpj: data.cpfcnpj,
            email: data.email,
            telefone: data.telefone,
            cep: data.cep,
            logradouro: response.data.logradouro,
            numero: '',
            bairro: response.data.bairro,
            cidade: response.data.localidade,
            complemento: response.data.complemento,
            uf: response.data.uf
            })
        }).catch((err) => {
            if (err.response) {
                setMessage(err.response.data)
            } else {
                setMessage('Erro: Tente novamente mais tarde!')
            }
        })
      }




    const editarCliente = async (e) => {
        e.preventDefault()
        const headers = {
            'headers': {
                'Content-Type': 'application/json'
            }
        }
        await axios.put('http://localhost:8080/clientes', data, headers)
            .then((response) => {
                setMessage(response.data.mensagem)
            }).catch((err) => {
                if (err.response) {
                    setMessage(err.response.data.mensagem)
                } else {
                    setMessage('Erro: Tente novamente mais tarde ou solicite ajuda ao suporte!')
                }
            })
    }



    const masktel = [{ mask: '(00) 0000-0000' }, { mask: '(00) 00000-0000' }]
    const maskcep = [{ mask: '00000-000'}]
    const maskcpf = [{ mask: '000.000.000-00' }, { mask: '00.000.000/0000-00' }]
    const maskuf = [{ mask: 'aa'}]
    return (
        <>
            <Head>
                <title>Monitora Entregas</title>
                <meta name='description' content='Generated by create next app' />
                <meta name='viewport' content='width=device-width, initial-scale=1' />
                <link rel='icon' href='/favicon.ico' />
            </Head>
            <main>
                <Link href={'/listarClientes'}><button type='button'>Listar</button></Link>{' '}
                <h2>Editar Cliente {data.nome}</h2>
                {mensagem ? <p>{mensagem}</p> : ''}
                <form onSubmit={editarCliente}>
                    <label>código: {id} </label><br />
                    <label>Nome:  </label>
                    <input type='text' name='nome' placeholder='Nome Completo' onChange={valueInput} value={data.nome} /> <br /><br />
                    <label>E-Mail: </label>
                    <input type='email' name='email' placeholder='email@email.com' onChange={valueInput} value={data.email} /> <br /><br />
                    <label>CPF/CNPJ:  </label>
                    <IMaskInput mask={maskcpf} name='cpfcnpj' placeholder='000.000.000-00' onChange={valueInput} value={data.cpfcnpj}/> <br /><br />
                    <label>Telefone:  </label>
                    <IMaskInput mask={masktel} name='telefone' placeholder='(00) 00000-0000' onChange={valueInput} value={data.telefone}/> <br /><br />

                    <label>CEP:  </label>
                    <IMaskInput mask={maskcep} name='cep' placeholder='00000-000 ' onChange={valueInput} value={data.cep} />  
                    <button type='button' onClick={() => buscaCEP(data.cep)}>Validar</button><br /><br />

                    
                    <label>Logradouro:  </label>
                    <input type='text' name='logradouro' placeholder=' ' onChange={valueInput} value={data.logradouro} /> <br /><br />
                    <label>Numero:  </label>
                    <input type='number' name='numero' placeholder=' ' onChange={valueInput} value={data.numero} /> <br /><br />
                    <label>Bairro:  </label>
                    <input type='text' name='bairro' placeholder=' ' onChange={valueInput} value={data.bairro} /> <br /><br />
                    <label>Complemento:  </label>
                    <input type='text' name='complemento' placeholder=' ' onChange={valueInput} value={data.complemento} /> <br /><br />
                    <label>UF:  </label>
                    <IMaskInput mask={maskuf} name='uf' placeholder='' onChange={valueInput} value={data.uf} /> <br /><br />
                    <label>Cidade:  </label>
                    <input type='text' name='cidade' placeholder=' ' onChange={valueInput} value={data.cidade} /> <br /><br />

                    <button type='submit'>Salvar</button><br /><br />
                </form>
            </main>
        </>
    )

}