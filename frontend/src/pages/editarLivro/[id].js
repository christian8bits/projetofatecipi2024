import axios from 'axios'
import Head from 'next/head'
import Link from 'next/link'
import { useRouter } from 'next/router'
import { useEffect, useState } from 'react'
import { IMaskInput } from 'react-imask'

export default function Editar() {
    const [data, setData] = useState([])
    const [mensagem, setMessage] = useState('')
    const router = useRouter()
    const [id] = useState(router.query.id)
    const getLivro = async () => {
        if (id === undefined) {
            setMessage('Erro: Livro NÃƒO encontrado!')
            return
        }

        await axios.get('http://localhost:8080/livro/' + id)
            .then((response) => {
                console.log(response.data.livro)
                setData(response.data.livro)
            }).catch((err) => {
                if (err.response) {
                    setMessage(err.response.data.mensagem)
                } else {
                    setMessage('Erro: Tente novamente mais tarde!')
                }
            })
    }

    useEffect(() => {
        getLivro()
    }, [id])

    const valueInput = (e) => setData({ ...data, [e.target.name]: e.target.value })



    const editarLivro = async (e) => {
        e.preventDefault()
        const headers = {
            'headers': {
                'Content-Type': 'application/json'
            }
        }
        await axios.put('http://localhost:8080/livros', data, headers)
            .then((response) => {
                setMessage(response.data.mensagem)
            }).catch((err) => {
                if (err.response) {
                    setMessage(err.response.data.mensagem)
                } else {
                    setMessage('Erro: Tente novamente mais tarde ou solicite ajuda ao suporte!')
                }
            })
    }




    return (
        <>
            <Head>
                <title>Monitora Entregas</title>
                <meta name='description' content='Generated by create next app' />
                <meta name='viewport' content='width=device-width, initial-scale=1' />
                <link rel='icon' href='/favicon.ico' />
            </Head>
            <main>
                <Link href={'/listarLivros'}><button type='button'>Listar</button></Link>{' '}
                <h2>Editar Livro {data.nome}</h2>
                {mensagem ? <p>{mensagem}</p> : ''}
                <form onSubmit={editarLivro}>
                <label>Titulo: </label>
              <input type='text' name='titulo' placeholder='' onChange={valueInput} value={data.titulo} /><br /><br />
              <label>Autor: </label>
              <input type='text' name='autor' placeholder='' onChange={valueInput} value={data.autor} /><br /><br />

              <label>Editora: </label>
              <input type='text' name='editora' placeholder='' onChange={valueInput} value={data.editora} /><br /><br />



                    <button type='submit'>Salvar</button><br /><br />
                </form>
            </main>
        </>
    )

}