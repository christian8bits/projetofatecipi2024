import Head from 'next/head'
import Link from 'next/link'
import { useState } from 'react'
import { useRouter } from 'next/router'


export default function Principal() {

  const router = useRouter()

  const [mensagem, setMessage] = useState('')
  const valueInput = (e) => setData({ ...data, [e.target.name]: e.target.value })


  const [data, setData] = useState([]);

  const handleFileUpload = (e) => {
    const reader = new FileReader();
    reader.readAsBinaryString(e.target.files[0]);
    reader.onload = (e) => {
      const data = e.target.result;
      const workbook = XLSX.read(data, { type: "binary" });
      const sheetName = workbook.SheetNames[0];
      const sheet = workbook.Sheets[sheetName];
      const parsedData = XLSX.utils.sheet_to_json(sheet);
      setData(parsedData);
    };
  }

//EXPORTAR XLSX
  const XLSX = require('xlsx')
  const students = [
      { name: "Chris", email: "chris@gmail.com", age: 22, gender: "M" },
      { name: "Bits", email: "bits@gmail.com", age: 33, gender: "M" }
  ]
  
  const convertJsonToExcel = () => {
  
      const workSheet = XLSX.utils.json_to_sheet(students);
      const workBook = XLSX.utils.book_new();
  
      XLSX.utils.book_append_sheet(workBook, workSheet, "students")
      // Generate buffer
      XLSX.write(workBook, { bookType: 'xlsx', type: "buffer" })
  
      // Binary string
      XLSX.write(workBook, { bookType: "xlsx", type: "binary" })
  
      XLSX.writeFile(workBook, "studentsData.xlsx")
  
  }
  //EXECUTAR EXPORTAÇÃO
  //convertJsonToExcel()


  return (
    <>
      <Head>
        <title>Monitora Entregas</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main>
        <h2>Monitoramento de Envios</h2>
        {mensagem ? <p>{mensagem}</p> : ''}

        <Link href={'/listarClientes'}> <button type='button'>Clientes</button></Link>{' '}
        <Link href={'/listarLivros'}> <button type='button'>Livros</button></Link>{' '}

        <p>Sistema para acompanhar envios de livros</p>

        <div className="App">

          <input
            type="file"
            accept=".xlsx, .xls"
            onChange={handleFileUpload}
          />

          {data.length > 0 && (
            <table className="table">
              <thead>
                <tr>
                  {Object.keys(data[0]).map((key) => (
                    <th key={key}>{key}</th>
                  ))}
                </tr>
              </thead>
              <tbody>
                {data.map((row, index) => (
                  <tr key={index}>
                    {Object.values(row).map((value, index) => (
                      <td key={index}>{value}</td>
                    ))}
                  </tr>
                ))}
              </tbody>
            </table>
          )}

          <br /><br />
          ... webstylepress ...
        </div>



      </main>
    </>
  )

}